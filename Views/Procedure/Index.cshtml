@model IEnumerable<Website.Models.procedure>

@{
    ViewBag.Title = "Index";
}

@*Use for Ajax anti forgery token*@
@Html.AntiForgeryToken()

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table" id="procedureTable" >
    <thead>
        <tr>
            <th>
                Long Name
            </th>
            <th>
                Short Name
            </th>
            <th>
                Video Link
            </th>
            <th>
                Description
            </th>
            <th>
                User Actions
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LongName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ShortName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.VideoSource)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.ActionLink("Details", "Details", new { id = item.ProcedureID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ProcedureID })
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        @*$(document).ready(function () {
            var validationToken = $('input[name=__RequestVerificationToken]').val();
            // Convert all exisiting tables into DataTable
            var procedureTable = $('#procedureTable').DataTable({
                paging: false,
                rowReorder: true,
                // Load JSON data behind table. We will use this json data to update the actual table.
                ajax: CommonAjaxCall("GET", "@Url.Action("IndexJson","Procedure")", onSuccessSteps)
            });
            // Common Ajax Call to get all data from server for each table
            function CommonAjaxCall(type, url, successCallback) {
                $.ajax({
                    type: type,
                    url: url,
                    dataType: 'json', // DataType is used when getting info from server
                    success: function (data) {
                        successCallback(data);
                    },
                });
            }
            // Common Ajax Call for updating rows in each table
            function UpdateRowAjaxCall(type, url, token, data, recallFunction) {
                $.ajax({
                    type: type,
                    url: url,
                    data: data,
                    contentType: 'application/json; charset=utf-8', // ContentType is used when posting info to the server
                    headers: { '__RequestVerificationToken': token },
                    // Pass new data to call back functions
                    success: function (result) {
                        recallFunction(result)
                    },
                });
            }
            // PROCEDURE
            var newProcedureData;
            function onSuccessSteps(data) {
                newProcedureData = {};
                newProcedureData.procedures = data;
                if ($('#procedureTable').hide()) {
                    $('#procedureTable').show();
                }
            }
            procedureTable.on('row-reorder', function (e, detail, edit) {
                var changes = {};
                for (var i = 0, ien = detail.length; i < ien; i++) {
                    changes[detail[i].oldData] = detail[i].newData;
                }
                newProcedureData.updates = changes;
                UpdateRowAjaxCall("POST", "@Url.Action("EditSequence","Step")", validationToken, JSON.stringify(newStepData), onSuccessSteps);
                $('#procedureTable').hide();
            });
        })*@
    </script>
}
